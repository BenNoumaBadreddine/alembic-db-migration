"""baseline

Revision ID: f3217706b55a
Revises: f089c907d437
Create Date: 2022-12-01 17:36:35.393655

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f3217706b55a'
down_revision = 'f089c907d437'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alarm_description',
    sa.Column('alarm_description_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('digital_input', sa.Boolean(), nullable=False),
    sa.Column('alarm_status', sa.Integer(), nullable=False),
    sa.Column('alarm_description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('alarm_description_id'),
    schema='npm_log'
    )
    op.create_table('alarms_frequency',
    sa.Column('job_id', postgresql.UUID(), nullable=True),
    sa.Column('alarm_status', sa.Integer(), nullable=True),
    sa.Column('alarm_description', sa.Text(), nullable=True),
    sa.Column('alarm_count', sa.BigInteger(), nullable=True),
    schema='npm_log'
    )
    op.create_table('alarms_with_description',
    sa.Column('alarm_id', sa.BigInteger(), nullable=False),
    sa.Column('log_identifier_id', postgresql.UUID(), nullable=True),
    sa.Column('job_id', postgresql.UUID(), nullable=True),
    sa.Column('elapsed_sec', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('alarm_status', sa.Integer(), nullable=True),
    sa.Column('system_identifier_id', postgresql.UUID(), nullable=True),
    sa.Column('type', sa.CHAR(length=1), nullable=True),
    sa.Column('desc_mod', sa.Text(), nullable=True),
    sa.Column('alarm_description', sa.Text(), nullable=True),
    sa.Column('digital_input', sa.Boolean(), nullable=True),
    sa.Column('job_starttime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('alarm_id'),
    schema='npm_log'
    )
    op.create_table('chart_colors',
    sa.Column('color_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('desc_id', sa.Integer(), nullable=False),
    sa.Column('color', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('color_id'),
    schema='npm_log'
    )
    op.create_table('md_charts',
    sa.Column('uuid', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('desc_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    schema='npm_log'
    )
    op.create_table('stage_setup_attributes',
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('variable_name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('position'),
    schema='npm_log'
    )
    op.create_table('system_identifiers',
    sa.Column('system_identifier_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('customer_code', sa.Text(), nullable=True),
    sa.Column('plant_name', sa.Text(), nullable=True),
    sa.Column('system_id', sa.Integer(), nullable=True),
    sa.Column('sub_system_id', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('sap_equipment_id', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('system_identifier_id'),
    sa.UniqueConstraint('customer_code', 'plant_name', 'system_id', 'sub_system_id'),
    sa.UniqueConstraint('sap_equipment_id'),
    schema='npm_log'
    )
    op.create_table('jobs',
    sa.Column('job_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('system_identifier_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('job_num', sa.Integer(), nullable=True),
    sa.Column('job_counter', sa.Integer(), nullable=True),
    sa.Column('process_code', sa.Text(), nullable=True),
    sa.Column('starttime_utc', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('starttime_local', sa.DateTime(), nullable=True),
    sa.Column('job_error', sa.BigInteger(), server_default=sa.text('0'), nullable=True),
    sa.Column('job_duration', sa.Integer(), nullable=True),
    sa.Column('process_name', sa.Text(), nullable=True),
    sa.Column('customer_name', sa.Text(), nullable=True),
    sa.Column('job_start_user', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['system_identifier_id'], ['npm_log.system_identifiers.system_identifier_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id'),
    schema='npm_log'
    )
    op.create_index(op.f('ix_npm_log_jobs_system_identifier_id'), 'jobs', ['system_identifier_id'], unique=False, schema='npm_log')
    op.create_table('log_identifiers',
    sa.Column('log_identifier_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('system_identifier_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('desc_id', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('type', sa.CHAR(length=1), server_default=sa.text("'*'::bpchar"), nullable=True),
    sa.Column('comp_id', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('version', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('desc_mod', sa.Text(), nullable=True),
    sa.Column('unit', sa.Text(), nullable=True),
    sa.Column('is_set', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.Column('original_name', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['system_identifier_id'], ['npm_log.system_identifiers.system_identifier_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('log_identifier_id'),
    sa.UniqueConstraint('system_identifier_id', 'original_name'),
    schema='npm_log'
    )
    op.create_index(op.f('ix_npm_log_log_identifiers_system_identifier_id'), 'log_identifiers', ['system_identifier_id'], unique=False, schema='npm_log')
    op.create_table('system_data',
    sa.Column('system_data_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('system_identifier_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('Error_No', sa.BigInteger(), server_default=sa.text('0'), nullable=True),
    sa.ForeignKeyConstraint(['system_identifier_id'], ['npm_log.system_identifiers.system_identifier_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('system_data_id'),
    schema='npm_log'
    )
    op.create_table('alarms',
    sa.Column('alarm_id', sa.BigInteger(), server_default=Identity(start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), nullable=False),
    sa.Column('log_identifier_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('job_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('elapsed_sec', sa.Integer(), nullable=False),
    sa.Column('alarm_status', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['npm_log.jobs.job_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['log_identifier_id'], ['npm_log.log_identifiers.log_identifier_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('alarm_id'),
    schema='npm_log'
    )
    op.create_index(op.f('ix_npm_log_alarms_job_id'), 'alarms', ['job_id'], unique=False, schema='npm_log')
    op.create_table('interpolated_data',
    sa.Column('interpolated_data_id', sa.BigInteger(), server_default=Identity(start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), nullable=False),
    sa.Column('job_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('elapsed_sec', sa.Integer(), nullable=True),
    sa.Column('time_stamp', sa.DateTime(), nullable=True),
    sa.Column('io_interpolated', sa.Float(), server_default=sa.text('0.0'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['npm_log.jobs.job_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('interpolated_data_id'),
    schema='npm_log'
    )
    op.create_table('job_features',
    sa.Column('job_feature_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('job_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('value', sa.Float(), server_default=sa.text('0.0'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['npm_log.jobs.job_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_feature_id'),
    schema='npm_log'
    )
    op.create_table('job_parts',
    sa.Column('job_part_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('shop_part_code', sa.Text(), nullable=False),
    sa.Column('shop_order_code', sa.Text(), nullable=False),
    sa.Column('job_id', postgresql.UUID(), nullable=False),
    sa.Column('parts_weight', sa.Float(precision=53), nullable=True),
    sa.Column('weight_unit', sa.Text(), nullable=True),
    sa.Column('part_quantity', sa.Integer(), nullable=True),
    sa.Column('external_data_source', sa.Text(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['npm_log.jobs.job_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_part_id'),
    schema='npm_log'
    )
    op.create_table('job_usage',
    sa.Column('job_usage_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('job_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('consumable_id', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('consumable_name', sa.Text(), nullable=True),
    sa.Column('value', sa.Float(), server_default=sa.text('0.0'), nullable=True),
    sa.Column('unit', sa.Text(), nullable=True),
    sa.Column('cost', sa.Float(), server_default=sa.text('0.0'), nullable=True),
    sa.Column('currency', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['npm_log.jobs.job_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_usage_id'),
    schema='npm_log'
    )
    op.create_index(op.f('ix_npm_log_job_usage_job_id'), 'job_usage', ['job_id'], unique=False, schema='npm_log')
    op.create_table('log_comments',
    sa.Column('log_comments_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('job_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('utc_timestamp', sa.DateTime(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['npm_log.jobs.job_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('log_comments_id'),
    schema='npm_log'
    )
    op.create_index(op.f('ix_npm_log_log_comments_job_id'), 'log_comments', ['job_id'], unique=False, schema='npm_log')
    op.create_table('log_files_meta_data',
    sa.Column('log_files_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('path', sa.Text(), nullable=False),
    sa.Column('job_id', postgresql.UUID(), nullable=True),
    sa.Column('successful', sa.Boolean(), server_default=sa.text('true'), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('exeption_message', sa.Text(), nullable=True),
    sa.Column('insert_origin', sa.Text(), nullable=True),
    sa.Column('stage_setup_added', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['npm_log.jobs.job_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('log_files_id'),
    sa.UniqueConstraint('path'),
    schema='npm_log'
    )
    op.create_table('log_values',
    sa.Column('log_value_id', sa.BigInteger(), server_default=Identity(start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), nullable=False),
    sa.Column('log_identifier_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('job_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('elapsed_sec', sa.Integer(), nullable=True),
    sa.Column('utc_timestamp', sa.DateTime(), nullable=True),
    sa.Column('val', sa.Float(), server_default=sa.text('0.0'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['npm_log.jobs.job_id'], ondelete='CASCADE', deferrable=True),
    sa.ForeignKeyConstraint(['log_identifier_id'], ['npm_log.log_identifiers.log_identifier_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('log_value_id'),
    schema='npm_log'
    )
    op.create_index(op.f('ix_npm_log_log_values_job_id'), 'log_values', ['job_id'], unique=False, schema='npm_log')
    op.create_table('prediction_data',
    sa.Column('prediction_data_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('job_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('elapsed_sec', sa.Integer(), nullable=True),
    sa.Column('time_stamp', sa.DateTime(), nullable=True),
    sa.Column('io_prediction', sa.Float(), server_default=sa.text('0.0'), nullable=True),
    sa.Column('io_interpolated', sa.Float(), server_default=sa.text('0.0'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['npm_log.jobs.job_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('prediction_data_id'),
    schema='npm_log'
    )
    op.create_table('stage_change',
    sa.Column('stage_change_id', sa.BigInteger(), server_default=Identity(start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), nullable=False),
    sa.Column('job_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('elapsed_sec', sa.Integer(), nullable=False),
    sa.Column('mode_counter', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('process_mode', sa.Text(), nullable=True),
    sa.Column('stage_num', sa.Integer(), nullable=True),
    sa.Column('stage_name', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['npm_log.jobs.job_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('stage_change_id'),
    schema='npm_log'
    )
    op.create_index(op.f('ix_npm_log_stage_change_job_id'), 'stage_change', ['job_id'], unique=False, schema='npm_log')
    op.create_table('stage_setup',
    sa.Column('stage_setup_id', sa.BigInteger(), server_default=Identity(start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), nullable=False),
    sa.Column('job_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('stage_setup_elapsed_sec', sa.Integer(), nullable=True),
    sa.Column('stage_setup_version', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('ARG_SEQ', sa.Text(), nullable=True),
    sa.Column('ARG_NAME', sa.Text(), nullable=True),
    sa.Column('ARG_SETUP', sa.Text(), nullable=True),
    sa.Column('ARG_END', sa.Text(), nullable=True),
    sa.Column('ARG_HEAT_RAMP', sa.Text(), nullable=True),
    sa.Column('ARG_FLOW', sa.Text(), nullable=True),
    sa.Column('ARG_TEMP', sa.Text(), nullable=True),
    sa.Column('ARG_PRESS', sa.Text(), nullable=True),
    sa.Column('ARG_ATMO', sa.Text(), nullable=True),
    sa.Column('ARG_TIME', sa.Text(), nullable=True),
    sa.Column('ARG_MIN_FLOW', sa.Text(), nullable=True),
    sa.Column('ARG_MAX_FLOW', sa.Text(), nullable=True),
    sa.Column('ARG_POT', sa.Text(), nullable=True),
    sa.Column('ARG_DISS', sa.Text(), nullable=True),
    sa.Column('ARG_MIN_ATM', sa.Text(), nullable=True),
    sa.Column('ARG_MAX_ATM', sa.Text(), nullable=True),
    sa.Column('ARG_VAC', sa.Text(), nullable=True),
    sa.Column('ARG_FTEMP_EC', sa.Text(), nullable=True),
    sa.Column('ARG_IN_CHRG_EC', sa.Text(), nullable=True),
    sa.Column('ARG_ON_CHRG_EC', sa.Text(), nullable=True),
    sa.Column('ARG_DIFF_EC', sa.Text(), nullable=True),
    sa.Column('ARG_CUSTOM_DI', sa.Text(), nullable=True),
    sa.Column('ARG_CUSTOM_AI', sa.Text(), nullable=True),
    sa.Column('ARG_DGCNTRL', sa.Text(), nullable=True),
    sa.Column('ARG_COOL_RAMP', sa.Text(), nullable=True),
    sa.Column('ARG_AO_SETUP', sa.Text(), nullable=True),
    sa.Column('ARG_LOGINTERVAL', sa.Text(), nullable=True),
    sa.Column('ARG_KC', sa.Text(), nullable=True),
    sa.Column('ARG_ANCNTRL', sa.Text(), nullable=True),
    sa.Column('ARG_BLOCKINFO', sa.Text(), nullable=True),
    sa.Column('ARG_IN_CHRG_SP', sa.Text(), nullable=True),
    sa.Column('ARG_ON_CHRG_SP', sa.Text(), nullable=True),
    sa.Column('ARG_ALARM_LIMITS', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['npm_log.jobs.job_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('stage_setup_id'),
    schema='npm_log'
    )
    op.create_index(op.f('ix_npm_log_stage_setup_job_id'), 'stage_setup', ['job_id'], unique=False, schema='npm_log')
    op.create_table('job_features_identifier',
    sa.Column('job_feature_identifier_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('job_feature_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_feature_id'], ['npm_log.job_features.job_feature_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_feature_identifier_id'),
    schema='npm_log'
    )
    op.create_table('log_features',
    sa.Column('log_feature_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('log_value_id', sa.BigInteger(), nullable=True),
    sa.Column('value', sa.Float(), server_default=sa.text('0.0'), nullable=True),
    sa.ForeignKeyConstraint(['log_value_id'], ['npm_log.log_values.log_value_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('log_feature_id'),
    schema='npm_log'
    )
    op.create_table('usage_tracking',
    sa.Column('usage_tracking_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('log_identifier_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('stage_change_id', sa.BigInteger(), nullable=False),
    sa.Column('usage', sa.Float(), server_default=sa.text('0.0'), nullable=True),
    sa.ForeignKeyConstraint(['log_identifier_id'], ['npm_log.log_identifiers.log_identifier_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['stage_change_id'], ['npm_log.stage_change.stage_change_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('usage_tracking_id'),
    schema='npm_log'
    )
    op.create_table('log_features_identifier',
    sa.Column('log_features_identifier_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('log_feature_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['log_feature_id'], ['npm_log.log_features.log_feature_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('log_features_identifier_id'),
    schema='npm_log'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('log_features_identifier', schema='npm_log')
    op.drop_table('usage_tracking', schema='npm_log')
    op.drop_table('log_features', schema='npm_log')
    op.drop_table('job_features_identifier', schema='npm_log')
    op.drop_index(op.f('ix_npm_log_stage_setup_job_id'), table_name='stage_setup', schema='npm_log')
    op.drop_table('stage_setup', schema='npm_log')
    op.drop_index(op.f('ix_npm_log_stage_change_job_id'), table_name='stage_change', schema='npm_log')
    op.drop_table('stage_change', schema='npm_log')
    op.drop_table('prediction_data', schema='npm_log')
    op.drop_index(op.f('ix_npm_log_log_values_job_id'), table_name='log_values', schema='npm_log')
    op.drop_table('log_values', schema='npm_log')
    op.drop_table('log_files_meta_data', schema='npm_log')
    op.drop_index(op.f('ix_npm_log_log_comments_job_id'), table_name='log_comments', schema='npm_log')
    op.drop_table('log_comments', schema='npm_log')
    op.drop_index(op.f('ix_npm_log_job_usage_job_id'), table_name='job_usage', schema='npm_log')
    op.drop_table('job_usage', schema='npm_log')
    op.drop_table('job_parts', schema='npm_log')
    op.drop_table('job_features', schema='npm_log')
    op.drop_table('interpolated_data', schema='npm_log')
    op.drop_index(op.f('ix_npm_log_alarms_job_id'), table_name='alarms', schema='npm_log')
    op.drop_table('alarms', schema='npm_log')
    op.drop_table('system_data', schema='npm_log')
    op.drop_index(op.f('ix_npm_log_log_identifiers_system_identifier_id'), table_name='log_identifiers', schema='npm_log')
    op.drop_table('log_identifiers', schema='npm_log')
    op.drop_index(op.f('ix_npm_log_jobs_system_identifier_id'), table_name='jobs', schema='npm_log')
    op.drop_table('jobs', schema='npm_log')
    op.drop_table('system_identifiers', schema='npm_log')
    op.drop_table('stage_setup_attributes', schema='npm_log')
    op.drop_table('md_charts', schema='npm_log')
    op.drop_table('chart_colors', schema='npm_log')
    op.drop_table('alarms_with_description', schema='npm_log')
    op.drop_table('alarms_frequency', schema='npm_log')
    op.drop_table('alarm_description', schema='npm_log')
    # ### end Alembic commands ###
